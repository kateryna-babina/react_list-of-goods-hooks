{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","setReversed","NONE","setSortType","isListChanged","sortBy","sortTypeValue","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMe,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAAgCD,mBAAShB,EAASkB,MAAlD,mBAAOd,EAAP,KAAiBe,EAAjB,KACMC,EAAgBhB,IAAaJ,EAASkB,MAAQb,EAM9CgB,EAAS,SAACC,GACdH,EAAYG,IAQd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYrB,IAAaJ,EAASU,WACtCgB,QAAS,WACPL,EAAOrB,EAASU,WALpB,iCAWA,wBACEc,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYrB,IAAaJ,EAASY,SACtCc,QAAS,WACPL,EAAOrB,EAASY,SALpB,4BAWA,wBACEY,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAapB,IACjBqB,QA1CQ,WACdT,GAAaZ,IAqCT,qBASCe,GACC,wBACEI,KAAK,SACLD,UAAU,4BACVG,QA3CI,WACZT,GAAY,GACZE,EAAYnB,EAASkB,OAsCf,sBAWJ,6BACE,6BACGhB,EAAkBD,EAAiB,CAAEI,aAAYD,aAC/CuB,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCtHtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.14f878f3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const isListChanged = sortType !== SortType.NONE || isReversed;\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const sortBy = (sortTypeValue: SortType) => {\n    setSortType(sortTypeValue);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={() => {\n            sortBy(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={() => {\n            sortBy(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isListChanged && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { isReversed, sortType })\n            .map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}